#!/bin/bash

# Display banner
cat << "EOF"
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|P|e|n|t|e|s|t|P|a|c|k|a|g|e|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    Script: auto-iscsi.sh
    Author: Leon Teale
    Twitter: @leonteale
    Website: cyberwolf-security.co.uk
    Version: 1.0.1
EOF

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

USAGE='
Usage: auto-iscsi.sh [IP]
Options:
IP       | The IP address for the iSCSI target

Example usage:
./auto-iscsi.sh 10.133.36.191
'

# Check for root privileges
if [ "$(id -u)" != "0" ]; then
    echo -e "${RED}This script must be run as root${NC}" 1>&2
    exit 1
fi

# Check for correct number of arguments
if [ "$#" -ne 1 ]; then
    echo -e "$USAGE"
    exit 1
fi

IP=$1
MOUNT_DIR="/tmp/temp-$IP"

echo -e "\n${GREEN}Discovering iSCSI targets at IP: $IP${NC}\n"

# Discover the iSCSI targets
TARGETS=$(iscsiadm -m discovery -t st -p $IP)

# Check if any targets were found
if [ -z "$TARGETS" ]; then
    echo -e "${RED}No targets found at IP: $IP${NC}"
    exit 1
fi

# Extract the first target name
TARGET_NAME=$(echo "$TARGETS" | awk '{print $2}' | head -n1)

# Check if already logged in to the target
EXISTING_SESSION=$(iscsiadm --mode session | grep "$TARGET_NAME")
if [ -n "$EXISTING_SESSION" ]; then
    echo -e "${RED}Existing session found for target: $TARGET_NAME${NC}"
    echo -e "Logging out of existing session...\n"
    iscsiadm --mode node --targetname $TARGET_NAME --portal $IP --logout
    if [ $? -ne 0 ]; then
        echo -e "${RED}Failed to logout from existing session${NC}"
        exit 1
    fi
fi

# Now attempt to log in
echo -e "Attempting to login to target: ${GREEN}$TARGET_NAME${NC}\n"
iscsiadm --mode node --targetname $TARGET_NAME --portal $IP --login

if [ $? -ne 0 ]; then
    echo -e "${RED}Failed to login to target${NC}"
    exit 1
fi

echo -e "Creating mount directory: ${GREEN}$MOUNT_DIR${NC}"
mkdir -p $MOUNT_DIR

echo -e "\nAttempting to mount ${GREEN}/dev/sdb2${NC} to ${GREEN}$MOUNT_DIR${NC}"

mount -o ro /dev/sdb2 $MOUNT_DIR

if [ $? -ne 0 ]; then
    echo -e "${RED}Failed to mount /dev/sdb2${NC}"
    exit 1
fi

echo -e "${GREEN}Successfully mounted /dev/sdb2 to $MOUNT_DIR${NC}\n"

cd $MOUNT_DIR

