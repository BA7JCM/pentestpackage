import argparse
import os
import subprocess
import csv
from prettytable import PrettyTable
from termcolor import colored

def check_ike(ip, verbose):
    cmd = ['ike-scan', ip]
    result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, timeout=10)
    output = str(result.stdout, 'utf-8')
    
    if verbose:
        print(f"Debug - IKE-Scan Output for {ip}:\n{output}")

    ike_details = {
        'IKE': 'Not Found',
        'IKEv1': 'Not Found',
        'Handshake': 'Not Captured',
        'Hash': 'N/A',
        'Aggressive Mode': 'Not Found'
    }

    if "Handshake returned" in output:
        ike_details['IKE'] = 'Found'
        ike_details['IKEv1'] = 'Found'
        ike_details['Handshake'] = 'Captured'
        ike_details['Hash'] = output.split('HDR=')[1].split(')')[0]
        
    if "Aggressive Mode Handshake returned" in output:
        ike_details['Aggressive Mode'] = 'Found'

    return ike_details

def main(args):
    if os.geteuid() != 0:
        print(colored("Run as root.", "red"))
        exit(1)

    ips = []
    csv_output = []
    
    if args.list:
        with open(args.list, 'r') as f:
            ips = f.read().splitlines()
    elif args.IP:
        ips = [args.IP]
        
    x = PrettyTable()
    x.field_names = ["IP/Hostname", "IKE", "IKEv1", "Handshake", "Hash", "Aggressive Mode"]

    for ip in ips:
        ike_details = check_ike(ip, args.verbose)
        agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'

        if ike_details['IKE'] == 'Found':
            print(colored(f"Advanced Check with ike-scan: IKE v1 Found on {ip}", "red"))
            x.add_row([
                ip, 
                colored(ike_details['IKE'], 'yellow'),
                colored(ike_details['IKEv1'], 'red'),
                colored(ike_details['Handshake'], 'red'),
                ike_details['Hash'],
                colored(ike_details['Aggressive Mode'], agg_color)
            ])
            csv_output.append([ip, ike_details['IKE'], ike_details['IKEv1'], ike_details['Handshake'], ike_details['Hash'], ike_details['Aggressive Mode']])
        else:
            print(colored(f"IKE Service Not Discovered on {ip}", "green"))

    print(x)
    
    if args.output:
        with open(args.output, 'w', newline='') as csvfile:
            writer = csv.writer(csvfile)
            writer.writerow(["IP/Hostname", "IKE", "IKEv1", "Handshake", "Hash", "Aggressive Mode"])
            writer.writerows(csv_output)

if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Advanced IKE Detection Script')
    parser.add_argument('IP', nargs='?', help='Target IP address to scan. Example: 192.168.1.1')
    parser.add_argument('--list', '-l', help='Text file with list of target IPs, one per line. Example: targets.txt')
    parser.add_argument('-v', '--verbose', action='store_true', help='Enable verbose/debug output.')
    parser.add_argument('-o', '--output', help='Output to CSV file.')
    args = parser.parse_args()
    main(args)
