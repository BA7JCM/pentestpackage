# Importing necessary modules
import argparse
import os
import subprocess
import csv
from prettytable import PrettyTable
from termcolor import colored

# Function to display the banner
def banner():
    print(colored("""
Version: 1.0.10
Script: ike_check.py
Author: Leon Teale
Twitter: @leonteale
Website: cyberwolf-security.co.uk
""", 'green'))

# Function to check_ike
def check_ike(ip, verbose):
    cmd = ['ike-scan', ip]
    try:
        result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, timeout=10)
    except subprocess.TimeoutExpired:
        print(f'Timeout while running command: {cmd}')
        return None
    output = str(result.stdout, 'utf-8')
    
    if verbose:
        print(f'Debug - IKE-Scan Output for {ip}:\n{output}')
        
    ike_details = {
        'IP/Hostname': ip,
        'IKE': 'Not Found',
        'IKEv1': 'Not Found',
        'Handshake': 'Not Captured',
        'Encryption Algorithm': 'Unknown',
        'Hash Algorithm': 'Unknown',
        'PFS': 'Unknown',
        'Aggressive Mode': 'Not Found'
    }
    
    if 'Main Mode Handshake returned' in output:
        ike_details['IKE'] = 'Found'
        ike_details['IKEv1'] = 'Found'
        ike_details['Handshake'] = 'Captured'
        
        # Parsing encryption, hash, and PFS details from ike-scan output
        # Placeholder for future code for parsing these details from the output
    
    if 'Aggressive Mode Handshake returned' in output:
        ike_details['Aggressive Mode'] = 'Found'
    
    return ike_details

# Main function
    
    for ip in ips:
        ike_details = check_ike(ip, args.verbose)
        if ike_details:
            if ike_details['IKE'] == 'Found':
                agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'
                    ip, 
                    colored(ike_details['IKE'], 'yellow'),
                    colored(ike_details['IKEv1'], 'red'),
                    colored(ike_details['Handshake'], 'red'),
                    ike_details['Encryption Algorithm'],
                    ike_details['Hash Algorithm'],
                    ike_details['PFS'],
                    colored(ike_details['Aggressive Mode'], agg_color)
                csv_output.append([
                    ip, 
                    ike_details['IKE'], 
                    ike_details['IKEv1'], 
                    ike_details['Handshake'], 
                    ike_details['Encryption Algorithm'], 
                    ike_details['Hash Algorithm'], 
                    ike_details['PFS'], 
                    ike_details['Aggressive Mode']
            else:
                print(colored(f'IKE Service Not Discovered on {ip}', 'green'))


    for ip in ips:
        ike_details = check_ike(ip, args.verbose)
        if ike_details:
            if ike_details['IKE'] == 'Found':
                agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'
                    ip, 
                    colored(ike_details['IKE'], 'yellow'),
                    colored(ike_details['IKEv1'], 'red'),
                    colored(ike_details['Handshake'], 'red'),
                    ike_details['Encryption Algorithm'],
                    ike_details['Hash Algorithm'],
                    ike_details['PFS'],
                    colored(ike_details['Aggressive Mode'], agg_color)
                csv_output.append([
                    ip, 
                    ike_details['IKE'], 
                    ike_details['IKEv1'], 
                    ike_details['Handshake'], 
                    ike_details['Encryption Algorithm'], 
                    ike_details['Hash Algorithm'], 
                    ike_details['PFS'], 
                    ike_details['Aggressive Mode']
            else:
                print(colored(f'IKE Service Not Discovered on {ip}', 'green'))

def main(args):
    if os.geteuid() != 0:
        print(colored('Run as root.', 'red'))
        exit(1)
    
    ips = []
    csv_output = []
    
    if args.list:
        with open(args.list, 'r') as f:
            ips = f.read().splitlines()
    elif args.IP:
        ips = [args.IP]
        
    x = PrettyTable()
    x.field_names = ['IP/Hostname', 'IKE', 'IKEv1', 'Handshake', 'Encryption Algorithm', 'Hash Algorithm', 'PFS', 'Aggressive Mode']
    
    for ip in ips:
        ike_details = check_ike(ip, args.verbose)
        if ike_details:
            agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'
            if ike_details['IKE'] == 'Found':
                agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'
                    ip,
                    colored(ike_details['IKE'], 'yellow'),
                    colored(ike_details['IKEv1'], 'red'),
                    colored(ike_details['Handshake'], 'red'),
                    ike_details['Encryption Algorithm'],
                    ike_details['Hash Algorithm'],
                    ike_details['PFS'],
                    colored(ike_details['Aggressive Mode'], agg_color)
                ip, 
                colored(ike_details['IKE'], 'yellow'),
                colored(ike_details['IKEv1'], 'red'),
                colored(ike_details['Handshake'], 'red'),
                ike_details['Encryption Algorithm'],
                ike_details['Hash Algorithm'],
                ike_details['PFS'],
                colored(ike_details['Aggressive Mode'], agg_color)
            csv_output.append([
                ip, 
                ike_details['IKE'], 
                ike_details['IKEv1'], 
                ike_details['Handshake'], 
                ike_details['Encryption Algorithm'], 
                ike_details['Hash Algorithm'], 
                ike_details['PFS'], 
                ike_details['Aggressive Mode']
        else:
            print(colored(f'IKE Service Not Discovered on {ip}', 'green'))
    
    print(x)
    
    if args.output:
        with open(args.output, 'w', newline='') as csvfile:
            writer = csv.writer(csvfile)
            writer.writerows(csv_output)

# Main code block
if __name__ == '__main__':
    banner()  # Display the banner
    parser = argparse.ArgumentParser(description='Advanced IKE Detection Script')
    parser.add_argument('IP', nargs='?', help='Target IP address to scan. Example: 192.168.1.1')
    parser.add_argument('--list', '-l', help='Text file with list of target IPs, one per line. Example: targets.txt')
    parser.add_argument('-v', '--verbose', action='store_true', help='Enable verbose/debug output.')
    parser.add_argument('-o', '--output', help='Output to CSV file.')
    args = parser.parse_args()
if ike_details['IKE'] == 'Found':
                agg_color = 'green' if ike_details['Aggressive Mode'] == 'Not Found' else 'red'
                x.add_row([
                    ip,
                    colored(ike_details['IKE'], 'yellow'),
                    colored(ike_details['IKEv1'], 'red'),
                    colored(ike_details['Handshake'], 'red'),
                    ike_details['Encryption Algorithm'],
                    ike_details['Hash Algorithm'],
                    ike_details['PFS'],
                    colored(ike_details['Aggressive Mode'], agg_color)
                ])
    main(args)
