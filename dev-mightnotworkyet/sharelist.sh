#!/bin/bash

# Function to list folders in a share
list_folders() {
    local share=$1
    local output_file=$2
    echo -e "\e[34mConnecting to $share...\e[0m" | tee -a "$output_file"
    smbclient "//$SERVER/$share" -U "$USER%$PASSWORD" -m SMB2 << EOF | tee -a "$output_file"
    ls
    quit
EOF
}

# Function to process each IP
process_ip() {
    local SERVER=$1
    local output_file="scan_results_$SERVER.txt"
    
    echo -e "\e[32mScanning $SERVER...\e[0m" | tee "$output_file"

    # List shares and filter out unnecessary lines and those with a '$'
    shares=$(smbclient -L //$SERVER -U "$USER%$PASSWORD" -m SMB2 2>/dev/null | grep "Disk" | grep -v '\$' | awk '{print $1}')

    # Check if any shares were found
    if [ -z "$shares" ]; then
        echo -e "\e[31mNo non-administrative shares found on $SERVER.\e[0m" | tee -a "$output_file"
        return
    fi

    echo -e "\e[32mAvailable non-administrative shares on $SERVER:\e[0m" | tee -a "$output_file"
    echo "$shares" | tee -a "$output_file"

    # Connect to each share and list folders
    for share in $shares; do
        list_folders "$share" "$output_file" | grep -v "NT_STATUS_ACCESS_DENIED" || echo -e "\e[31mAccess denied for $share, skipping...\e[0m" | tee -a "$output_file"
    done

    echo -e "\e[32mFinished checking all shares on $SERVER.\e[0m" | tee -a "$output_file"
}

# Check if IP address or file is provided as an argument
if [ -z "$1" ]; then
    echo -e "\e[31mUsage: $0 <server_ip> or $0 <file_with_ips>\e[0m"
    exit 1
fi

# Server login information
USER="bcn.local\\leon.teale"
PASSWORD='Leghorn rift versus!'

# Check if the argument is a file
if [ -f "$1" ]; then
    # Process each IP in the file
    while IFS= read -r SERVER; do
        process_ip "$SERVER"
    done < "$1"
else
    # Process a single IP
    SERVER="$1"
    process_ip "$SERVER"
fi

