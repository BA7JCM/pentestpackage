// ====== General Utility Functions ======

let installingInterval;

function appendToLog(message, color = 'green') {
    $('#outputLog').append(`<li class="list-group-item" style="background-color: black; color: ${color};">${message}</li>`);
    autoScrollLogsConsole();
}

function autoScrollLogsConsole() {
    var logsConsole = document.getElementById("outputLog");
    logsConsole.scrollTop = logsConsole.scrollHeight;
}

function startOperationAnimation(message) {
    let dots = '';
    installingInterval = setInterval(function() {
        dots = dots.length < 3 ? dots + '.' : '';
        $('#outputLog').children().last().text(message + dots);
    }, 500);
}

function stopOperationAnimation() {
    clearInterval(installingInterval);
}

// ====== Device Functions ======

function checkDevices() {
    $.ajax({
        url: '/list-devices',
        method: 'GET',
        success: function(data) {
            let devices = data.devices;
            $('#outputLog').empty();
            if (devices.length === 0) {
                appendToLog("No ADB devices found", "red");
                $('#deviceStatus').text('Not Connected').removeClass('connected');
            } else {
                let deviceId = devices[0].split('\t')[0];
                devices.forEach(function(device) {
                    appendToLog(device);
                });
                $('#deviceStatus').html(`Connected <span style="color:green;">(${deviceId})</span>`).addClass('connected');
            }
            updateAnalyseApkVisibility();
        },
        error: function(jqXHR, textStatus) {
            appendToLog("Error fetching devices: " + textStatus, "red");
            $('#deviceStatus').text('Error').removeClass('connected');
            updateAnalyseApkVisibility();
        }
    });
}

$('#listDevices').click(checkDevices);

// ====== APK Installation and Uninstallation ======

$('#installApk').click(function() {
    $('#apkUploadForm').toggle();
});

$('#apkUploadForm').submit(function(e) {
    e.preventDefault();
    let operationMessage = 'Installing APK...';
    appendToLog(operationMessage);
    startOperationAnimation(operationMessage);

    var formData = new FormData(this);
    $.ajax({
        url: '/install-apk',
        method: 'POST',
        data: formData,
        contentType: false,
        processData: false,
        success: function(data) {
            stopOperationAnimation();
            if (data.success) {
                appendToLog('APK installed successfully!');
                $('#apkName').text(data.packageName);
                $('#appVersion').text(data.versionName);
                $('#apkUploadForm').hide();

                localStorage.setItem('installedApk', JSON.stringify({
                    packageName: data.packageName,
                    versionName: data.versionName,
                    apkFilename: data.apkFilename // Store the filename
                }));

                if (data.packageName !== 'None') {
                    $('#apkName').append(' <a href="#" id="infoUninstallLink">(uninstall)</a>');
                } else {
                    $('#infoUninstallLink').remove();
                }
            } else {
                appendToLog(data.message, 'red');
                if (data.adbOutput) {
                    appendToLog('ADB Output: ' + data.adbOutput, 'orange');
                }
                if (data.adbError) {
                    appendToLog('ADB Error: ' + data.adbError, 'red');
                }
            }
            updateAnalyseApkVisibility();
        },
        error: function(jqXHR, textStatus) {
            stopOperationAnimation();
            appendToLog('Error installing APK: ' + textStatus, 'red');
            updateAnalyseApkVisibility();
        }
    });
});

$(document).on('click', '#infoUninstallLink', function(e) {
    e.preventDefault();
    let packageName = $('#apkName').text().split(' ')[0];
    appendToLog('Uninstalling ' + packageName + '...', 'yellow');
    $.ajax({
        url: '/uninstall-apk',
        method: 'POST',
        data: { packageName: packageName },
        success: function(data) {
            if (data.success) {
                appendToLog(data.message, 'green');
                $('#apkName').text('None');
                $('#appVersion').text('N/A');
                $('#infoUninstallLink').remove();

                localStorage.removeItem('installedApk');
            } else {
                appendToLog(data.message, 'red');
            }
            updateAnalyseApkVisibility();
        },
        error: function(jqXHR, textStatus) {
            appendToLog('Error uninstalling APK: ' + textStatus, 'red');
            updateAnalyseApkVisibility();
        }
    });
});

$(document).ready(function() {
    let installedApk = localStorage.getItem('installedApk');
    if (installedApk) {
        let apkData = JSON.parse(installedApk);
        $('#apkName').text(apkData.packageName);
        $('#appVersion').text(apkData.versionName);
        if (apkData.packageName !== 'None') {
            $('#apkName').append(' <a href="#" id="infoUninstallLink">(uninstall)</a>');
        }
    }

    checkDevices();
});

// ====== Logcat Functions ======

var logcatInterval;

function autoScrollLogcat() {
    var logcatConsole = $("#logcatContent");
    logcatConsole.scrollTop(logcatConsole[0].scrollHeight);
}

function updateLogcat() {
    $.ajax({
        url: '/get-logs',
        method: 'GET',
        success: function(data) {
            $('#logcatContent').text(data.logs.join('\n'));
            setTimeout(autoScrollLogcat, 5);
        }
    });
}

$('#startLogcat').click(function() {
    $.ajax({
        url: '/start-logcat',
        method: 'GET',
        success: function(data) {
            if (data.success) {
                appendToLog(data.message, 'green');
                if (!logcatInterval) {
                    logcatInterval = setInterval(updateLogcat, 1000);
                }
            } else {
                appendToLog(data.message, 'red');
            }
        }
    });
});

$('#stopLogcat').click(function() {
    $.ajax({
        url: '/stop-logcat',
        method: 'GET',
        success: function(data) {
            if (data.success) {
                appendToLog(data.message, 'green');
                if (logcatInterval) {
                    clearInterval(logcatInterval);
                    logcatInterval = null;
                }
            } else {
                appendToLog(data.message, 'red');
            }
        }
    });
});

$('#clearLogcat').click(function() {
    $.ajax({
        url: '/clear-logs',
        method: 'GET',
        success: function(data) {
            if (data.success) {
                appendToLog(data.message, 'yellow');
                $('#logcatContent').text('');
            }
        }
    });
});

// ====== Analyse APK ======

$('#analyseApk').click(function() {
    const packageName = $('#apkName').text().split(' ')[0].trim(); // Extract package name
    appendToLog('Decompiling APK...');  // Display initial message
    startOperationAnimation('Decompiling APK');  // Start the animation
    $.ajax({
        url: "/analyse-apk",
        method: "POST",
        data: { apkName: packageName },
        success: function(response) {
            stopOperationAnimation();  // Stop the animation
            if (response.status === "success") {
                appendToLog("APK decompiled successfully!", "green");
                localStorage.setItem('decompiledPath', response.decompiledPath);
            } else {
                appendToLog("Error during APK decompilation.", "red");
            }
        },
        error: function() {
            stopOperationAnimation();  // Stop the animation
            appendToLog("Server error during APK decompilation.", "red");
        }
    });
});

// ====== Static Analysis ======

$('#analyseApk').click(function() {
    const packageName = $('#apkName').text().split(' ')[0].trim(); // Extract package name
    appendToLog('Starting static analysis...');  // Display initial message
    $.ajax({
        url: "/static-analysis",
        method: "POST",
        data: { apkName: packageName },
        success: function(response) {
            if (response.status === "success") {
                appendToLog("Static analysis completed!", "green");
                const vulnerabilities = response.vulnerabilities;
                vulnerabilities.forEach(vuln => {
                    addVulnerability(vuln.title, vuln.risk);
                });
            } else {
                appendToLog("Error during static analysis.", "red");
            }
        },
        error: function() {
            appendToLog("Server error during static analysis.", "red");
        }
    });
});

// ====== Vulnerabilities ======

function addVulnerability(vulnerability, riskLevel) {
    const vulnerabilitiesList = document.getElementById('vulnerabilitiesList');
    const li = document.createElement('li');
    li.textContent = vulnerability;
    li.classList.add(`vulnerability-${riskLevel}`);
    vulnerabilitiesList.appendChild(li);
}

function updateAnalyseApkVisibility() {
    const isDeviceConnected = $('#deviceStatus').hasClass('connected');
    const isApkInstalled = $('#apkName').text().trim() !== "None";
    if (isDeviceConnected && isApkInstalled) {
        $('#analyseApk').show();
    } else {
        $('#analyseApk').hide();
    }
}

$(document).ready(function() {
    updateAnalyseApkVisibility();
});
