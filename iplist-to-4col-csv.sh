#!/bin/bash

# Display banner
cat << "EOF"
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|P|e|n|t|e|s|t|P|a|c|k|a|g|e|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    Script: IPlist-to-4col-csv.sh
    Author: Leon Teale
    Twitter: @leonteale
    Website: cyberwolf-security.co.uk
    Version: 1.0.0
EOF


USAGE='
Usage: create_ip_csv.sh [filename]
This script reads IP addresses from the specified file and creates a CSV file with 4 IP addresses per row.
'

#Define error messages
missing_ips_file_error="\e[31mError\e[0m: No file supplied."
invalid_option_error="\e[31mInvalid option\e[0m:"

#Check if the IP list file name is provided as an argument
if [ $# -eq 0 ]; then
    echo -e "${missing_ips_file_error}"
    echo -e "${USAGE}"
    exit 1
fi

#Get the IP list file name from the command-line argument
ip_file="$1"

#Check if the IP list file exists and is readable
if [[ ! -f "$ip_file" || ! -r "$ip_file" ]]; then
    echo -e "\e[31mError\e[0m: '\e[33m$ip_file\e[0m' is not a readable file or does not exist"
    echo -e "${USAGE}"
    exit 1
fi

#Read IP addresses from the IP list file
ips=($(cat "$ip_file"))

#Create the output CSV file
output_file="ips_$(date +%Y-%m-%d_%H-%M-%S).csv"

#Calculate number of rows and columns
num_ips=${#ips[@]}
num_rows=$((num_ips/4))
num_cols=4
if [ $((num_ips%4)) -ne 0 ]; then
    num_rows=$((num_rows+1))
fi

#Loop through IP addresses and add them to the CSV file
for ((i=0; i<num_rows; i++)); do
    line=""
    for ((j=0; j<num_cols; j++)); do
        idx=$((i+j*num_rows))
        if [ $idx -lt $num_ips ]; then
            if [ -n "$line" ]; then
                line="$line,${ips[idx]}"
            else
                line="${ips[idx]}"
            fi
        else
            if [ -n "$line" ]; then
                line="$line,"
            else
                line=","
            fi
        fi
    done
    echo "${line#,}" | tr '\t' ',' >> "$output_file"
    echo "${line#,}" | tr '\t' ','
done


echo "CSV file created at $output_file"
echo "Script completed successfully"
