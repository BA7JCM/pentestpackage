#!/bin/bash

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

# Function to display usage
usage() {
    echo -e "${GREEN}Usage: $0 <log_file>${NC}"
    echo "Supply the log file as an argument to the script."
    echo -e "${YELLOW}To generate the log file, use the command:${NC}"
    echo "netexec smb scope.txt -u '<user>' -p '<password>' --sam --log netexec-sam-scope.txt"
    exit 1
}

# Check for the correct number of arguments
if [ "$#" -ne 1 ]; then
    usage
fi

# Check if the file exists and is readable
if [ ! -r "$1" ]; then
    echo -e "${RED}Error: File $1 cannot be read.${NC}"
    exit 2
fi

# Create a list of unique hashes and counts
hashes=$(grep -oP '[^ ]+:[0-9]+:[^:]+:[^:]+(?=:::)' "$1" | \
         grep -v "aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0" | \
         sort | uniq -c)

# Header for the table
printf "%-20s | %-65s | %-5s | %s\n" "Username" "Hash" "Count" "IP Addresses"

# Process the list of hashes and counts
echo "$hashes" | while read -r count user_hash; do
    # Extract the hash part
    hash=$(echo "$user_hash" | awk -F: '{print $(NF-1) ":" $NF}')
    # Extract the username part
    username=$(echo "$user_hash" | awk -F: '{print $1}')

    # Use grep to find all associated IP addresses for this hash
    ips=$(grep "$hash" "$1" | awk '{print $7}' | sort | uniq | tr '\n' ',' | sed 's/,$//')

    # Determine color based on count
    color="$NC" # Default color
    if [ "$count" -eq 1 ]; then
        color="${GREEN}"
    elif [ "$count" -le 5 ]; then
        color="${YELLOW}"
    elif [ "$count" -ge 6 ]; then
        color="${RED}"
    fi

    # Output the line with color applied to the count only
    printf "%-20s | %-65s | %b%-5s%b | %s\n" "$username" "$hash" "$color" "$count" "$NC" "$ips"
done | column -t -s '|'

# Reset the colors
echo -ne "${NC}"

