#!/bin/bash
# sudo cp ./htb.sh /usr/local/bin/htb

# Define colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Help function
function show_help {
    echo -e "${GREEN}Usage:${NC}"
    echo -e "  htb --new"
    echo -e "      Initialize /etc/hosts with ##custom hosts and clear entries below it."
    echo -e "  htb --host <IP> <hostname>"
    echo -e "      Add a new host entry to /etc/hosts."
    echo -e "  htb --host <subdomain>"
    echo -e "      Add a new subdomain to the existing host entry in /etc/hosts."
    echo -e "  htb --dir"
    echo -e "      Run gobuster directory enumeration against all domains in /etc/hosts under ##custom hosts."
    echo -e "  htb --vhosts"
    echo -e "      Run gobuster vhost enumeration against the main domain in /etc/hosts under ##custom hosts."
    echo -e "  htb -h | --help"
    echo -e "      Display this help message."
}

# Function to check and install seclists if not installed
function check_install_seclists {
    if ! dpkg -l | grep -qw seclists; then
        echo -e "${YELLOW}seclists is not installed. Installing...${NC}"
        sudo apt update && sudo apt install -y seclists
    else
        echo -e "${GREEN}seclists is already installed.${NC}"
    fi
}

# Function to initialize /etc/hosts for custom hosts
function initialize_hosts {
    check_install_seclists
    sudo sed -i '/##custom hosts/,$d' /etc/hosts
    echo "##custom hosts" | sudo tee -a /etc/hosts
    echo -e "${GREEN}Initialized /etc/hosts for custom entries.${NC}"
}

# Function to add a host entry or subdomain entry
function add_host_entry {
    if [ -z "$1" ]; then
        echo -e "${RED}Error: IP and hostname must be provided.${NC}"
        show_help
        exit 1
    fi

    if [[ "$1" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        if [ -z "$2" ]; then
            echo -e "${RED}Error: Hostname must be provided when specifying an IP.${NC}"
            show_help
            exit 1
        fi
        sudo sed -i '/##custom hosts/a\'$1' '$2 /etc/hosts
        echo -e "${GREEN}Added $2 with IP $1 to /etc/hosts.${NC}"
    else
        subdomain=$1
        last_entry=$(sudo sed -n '/##custom hosts/,$p' /etc/hosts | grep -v "##custom hosts" | tail -n 1)
        if [ -z "$last_entry" ]; then
            echo -e "${RED}Error: No existing domain found. Please specify both IP and domain first.${NC}"
            show_help
            exit 1
        fi
        ip=$(echo $last_entry | awk '{print $1}')
        domain=$(echo $last_entry | awk '{print $2}')
        main_domain=$(echo $domain | awk -F'.' '{print $(NF-1)"."$NF}')
        new_entry="$ip $subdomain.$main_domain"
        echo "$new_entry" | sudo tee -a /etc/hosts > /dev/null
        echo -e "${GREEN}Added $subdomain.$main_domain with IP $ip to /etc/hosts.${NC}"
    fi
}

# Function to run gobuster on all custom domains
function run_gobuster {
    domains=$(sudo sed -n '/##custom hosts/,$p' /etc/hosts | grep -v "##custom hosts" | awk '{print $2}')
    num_domains=$(echo "$domains" | wc -l)
    
    if [ -z "$domains" ]; then
        echo -e "${RED}Error: No custom domains found in /etc/hosts.${NC}"
        exit 1
    fi
    
    if [ "$num_domains" -eq 1 ]; then
        echo -e "${GREEN}Running against the only host found: ${domains}${NC}"
        run_gobuster_single "$domains"
    else
        echo -e "${YELLOW}Multiple hosts found:${NC}"
        echo "$domains"
        read -p "Do you want to run this against $num_domains hosts (y/n)? " choice
        case "$choice" in 
            y|Y ) 
                for domain in $domains; do
                    xterm -hold -e "./htb.sh --run-dir-single \"$domain\"" &
                done
                ;;
            n|N )
                echo -e "${RED}Operation cancelled.${NC}"
                ;;
            * )
                echo -e "${RED}Invalid choice. Operation cancelled.${NC}"
                ;;
        esac
    fi
}

# Function to run gobuster on a single domain (invoked directly by the new terminal)
function run_gobuster_single {
    domain=$1
    output_file="$(pwd)/gobuster_${domain}_$(date +%Y%m%d_%H%M%S).txt"
    echo -e "${YELLOW}Running gobuster for $domain with 50 threads...${NC}"
    gobuster dir -u http://$domain -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -t 50 -e -x php,txt,html,bak,zip -b 503,404 -o "$output_file"
    echo -e "${GREEN}Output saved to ${output_file}${NC}"
}

# Function to run gobuster vhost enumeration
function run_gobuster_main {
    domains=$(sudo sed -n '/##custom hosts/,$p' /etc/hosts | grep -v "##custom hosts" | awk '{print $2}')
    num_domains=$(echo "$domains" | wc -l)

    if [ -z "$domains" ]; then
        echo -e "${RED}Error: No custom domains found in /etc/hosts.${NC}"
        exit 1
    fi
    
    if [ "$num_domains" -eq 1 ]; then
        echo -e "${GREEN}Running vhost enumeration against the only host found: ${domains}${NC}"
        run_gobuster_vhost "$domains"
    else
        echo -e "${YELLOW}Multiple hosts found:${NC}"
        echo "$domains"
        read -p "Do you want to run vhost enumeration against $num_domains hosts (y/n)? " choice
        case "$choice" in 
            y|Y ) 
                for domain in $domains; do
                    xterm -hold -e "./htb.sh --run-vhost-single \"$domain\"" &
                done
                ;;
            n|N )
                echo -e "${RED}Operation cancelled.${NC}"
                ;;
            * )
                echo -e "${RED}Invalid choice. Operation cancelled.${NC}"
                ;;
        esac
    fi
}

# Function to run gobuster vhost enumeration on a single domain (invoked directly by the new terminal)
function run_gobuster_vhost {
    domain=$1
    output_file="$(pwd)/gobuster_vhost_${domain}_$(date +%Y%m%d_%H%M%S).txt"
    echo -e "${YELLOW}Running gobuster vhost enumeration for $domain with 50 threads...${NC}"
    gobuster vhost -u http://$domain -w /usr/share/wordlists/seclists/Discovery/DNS/combined_subdomains.txt --append-domain -t 50 -o "$output_file"
    echo -e "${GREEN}Output saved to ${output_file}${NC}"
}

# Main script logic
case "$1" in
    --new)
        initialize_hosts
        ;;
    --host)
        add_host_entry "$2" "$3"
        ;;
    --dir)
        run_gobuster
        ;;
    --vhosts)
        run_gobuster_main
        ;;
    --run-dir-single)
        run_gobuster_single "$2"
        ;;
    --run-vhost-single)
        run_gobuster_vhost "$2"
        ;;
    -h|--help)
        show_help
        ;;
    *)
        echo -e "${RED}Error: Invalid option.${NC}"
        show_help
        exit 1
        ;;
esac

