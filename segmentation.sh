#!/bin/bash

# Display banner
cat << "EOF"
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|P|e|n|t|e|s|t|P|a|c|k|a|g|e|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
    Script: segmentation.sh
    Author: Leon Teale
    Twitter: @leonteale
    Website: cyberwolf-security.co.uk
    Version: 1.2.0
EOF

USAGE='
Usage: segmentation.sh [OPTION] [filename]
Options:
-I, --ingress | Run ingress testing TO the CDE. Ensure you are connecting to a NON-CDE before running.
-E, --egress  | Run egress testing FROM the CDE. Ensure you are connected to the CDE before running.
-P, --icmp    | ICMP scan on a list of IP addresses [filename]
-F, --fast    | Quick scan using masscan on a list of IP addresses [filename] (all tcp ports)
-h, --help    | This help and exit

Example usage:
./segmentation.sh --icmp    iplist.txt
./segmentation.sh --ingress [networkname] iplist.txt
./segmentation.sh --egress  [networkname] iplist.txt
./segmentation.sh --fast    iplist.txt
'

missing_network_file_error="\e[31mError\e[0m: No file supplied."
sudo_check_message="Please run the script using sudo since it is necessary for performing UDP scan"
invalid_option_error="\e[31mInvalid option\e[0m:"

if [[ "${EUID}" -ne 0 ]]; then
  echo "${sudo_check_message}"
  exit 1
fi

validate_ip_file(){
  if [ $# -lt 1 ]; then
    echo -e "${missing_network_file_error}"
    exit 1
  fi
  if [[ ! -f "$1" || ! -r "$1" ]]; then
    echo -e "\e[31mError\e[0m: '\e[33m$1\e[0m' is not a readable file or does not exist"
    echo "$USAGE"
    exit 1
  fi
}

case "$1" in
    -I | --ingress )
            if [ $# -lt 3 ]; then
              echo -e "\e[31mError\e[0m: Invalid number of parameters for ingress testing."
              echo -e "${USAGE}"
              exit 1
            fi

            network_name="$2"
            ip_file="$3"

            validate_ip_file "$ip_file"
            echo "Performing ingress testing on CDE from $network_name"
            sudo xterm -e "bash -c 'nmap -sT -p- -Pn -T4 -oA nmap-TCP-$network_name-to-cde -n -iL $ip_file --min-hostgroup 20 --max-retries 1 && exec bash' " &
            sudo xterm -e "bash -c 'nmap -sU -Pn -T4 -n -oA nmap-UDP-$network_name-to-cde -n -iL $ip_file --min-hostgroup 20 --max-retries 1 && exec bash'" &
            ;;

      -E | --egress )
            if [ $# -lt 3 ]; then
              echo -e "\e[31mError\e[0m: Invalid number of parameters for egress testing."
              echo -e "${USAGE}"
              exit 1
            fi

            network_name="$2"
            ip_file="$3"

            validate_ip_file "$ip_file"
            echo             echo "Performing egress testing on $network_name to CDE ($ip_file)"
            sudo xterm -e "bash -c 'nmap -sT -p- -Pn -T4 -oA nmap-TCP-cde-to-$network_name -n -iL $ip_file --min-hostgroup 20 --max-retries 1 && exec bash' " &
            sudo xterm -e "bash -c 'nmap -sU -Pn -T4 -n -oA nmap-UDP-cde-to-$network_name -n -iL $ip_file --min-hostgroup 20 --max-retries 1 && exec bash'" &
            sudo xterm -e "bash -c 'nmap scanme.nmap.org -n -Pn -oA nmap-cde-to-internet && exec bash'" &
            ;;

        --icmp | -P )
              if [ $# -lt 2 ]; then
                echo -e "\e[31mError\e[0m: Invalid number of parameters for ICMP scan."
                echo -e "${USAGE}"
                exit 1
              fi

              ip_file="$2"

              validate_ip_file "$ip_file"
              ip_addresses=($(cat "$ip_file"))
              for ip_address in "${ip_addresses[@]}"; do
                ping -c 1 -w 1 "$ip_address" >/dev/null
                if [ $? -eq 0 ]; then
                  echo "$ip_address is up"
                else
                  echo "$ip_address is down"
                fi
              done
              ;;

              -F | --fast )
                   if [ $# -lt 2 ]; then
                     echo -e "\e[31mError\e[0m: Invalid number of parameters for fast scan."
                     echo -e "${USAGE}"
                     exit 1
                   fi

                   ip_file="$2"

                   validate_ip_file "$ip_file"
                   sudo xterm -e "bash -c 'masscan -p- -iL $ip_file --rate=10000 && read -p \"Finished, press Enter to continue...\"' "&
                   ;;

    -h | --help )
        echo -e "${USAGE}"
        ;;
    * )
        echo -e "$invalid_option_error \e[33m$1\e[0m"
        echo -e "${USAGE}"
        exit 1
        ;;
esac
